workflows:
  ios-minimal:
    name: iOS Minimal App
    instance_type: mac_mini_m2
    environment:
      xcode: latest
    scripts:
      - name: Create minimal iOS app
        script: |
          # Create a new directory
          mkdir -p SimpleIOSApp
          cd SimpleIOSApp
          
          # Create a proper Swift file with @main attribute
          cat > AppDelegate.swift << EOF
          import UIKit
          
          @main
          class AppDelegate: UIResponder, UIApplicationDelegate {
              var window: UIWindow?
              
              func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {
                  window = UIWindow(frame: UIScreen.main.bounds)
                  window?.rootViewController = UIViewController()
                  window?.backgroundColor = .white
                  window?.makeKeyAndVisible()
                  return true
              }
          }
          EOF
          
          # Create basic Info.plist
          cat > Info.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleDevelopmentRegion</key>
              <string>en</string>
              <key>CFBundleExecutable</key>
              <string>SimpleApp</string>
              <key>CFBundleIdentifier</key>
              <string>com.example.simpleapp</string>
              <key>CFBundleInfoDictionaryVersion</key>
              <string>6.0</string>
              <key>CFBundleName</key>
              <string>SimpleApp</string>
              <key>CFBundlePackageType</key>
              <string>APPL</string>
              <key>CFBundleShortVersionString</key>
              <string>1.0</string>
              <key>CFBundleVersion</key>
              <string>1</string>
              <key>LSRequiresIPhoneOS</key>
              <true/>
              <key>UIApplicationSceneManifest</key>
              <dict>
                  <key>UIApplicationSupportsMultipleScenes</key>
                  <false/>
              </dict>
          </dict>
          </plist>
          EOF
          
          # Try the updated compilation approach
          SDK_PATH=$(xcrun --sdk iphoneos --show-sdk-path)
          
          echo "Trying direct compilation with xcodebuild..."
          
          # Use the simplest possible xcodebuild command
          xcodebuild -create-xcframework -output SimpleApp.xcframework -library ./dummy.a
          
          # Now try a different compilation approach with swiftc
          echo "Trying compilation with swiftc..."
          xcrun swiftc -sdk $SDK_PATH -target arm64-apple-ios14.0 \
            -emit-executable -parse-as-library \
            -o SimpleApp AppDelegate.swift
          
          # Check result
          if [ -f "SimpleApp" ]; then
            echo "Simple iOS app build succeeded!"
            ls -la SimpleApp
          else
            echo "Let's try with Xcode single view app template..."
            
            # Create a basic single view app template
            mkdir -p SingleViewApp
            cd SingleViewApp
            
            # Create a basic AppDelegate for UIKit app
            cat > AppDelegate.swift << EOF
            import UIKit
            
            @UIApplicationMain
            class AppDelegate: UIResponder, UIApplicationDelegate {
                var window: UIWindow?
                func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {
                    return true
                }
            }
            EOF
            
            # Create a basic ViewController
            cat > ViewController.swift << EOF
            import UIKit
            
            class ViewController: UIViewController {
                override func viewDidLoad() {
                    super.viewDidLoad()
                    view.backgroundColor = .white
                }
            }
            EOF
            
            # Use xcrun to compile these files
            xcrun swiftc -sdk $SDK_PATH \
              -target arm64-apple-ios14.0 \
              -parse-as-library \
              -o SingleViewApp \
              AppDelegate.swift ViewController.swift
            
            if [ -f "SingleViewApp" ]; then
              echo "Single view app build succeeded!"
              ls -la SingleViewApp
            else
              echo "All build attempts failed."
            fi
          fi
    artifacts:
      - SimpleIOSApp/**/*
